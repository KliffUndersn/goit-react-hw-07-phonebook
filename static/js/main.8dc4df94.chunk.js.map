{"version":3,"sources":["shared/services/contacts.js","redux/actions.js","redux/operations.js","components/InputForm/ContactList/ContactList.js","components/InputForm/FilterContacts/FilterContacts.js","components/InputForm/inputForm/fields.js","components/InputForm/inputForm/InputForm.js","components/InputForm/contactForm.js","redux/store.js","App.js","index.js"],"names":["instance","axios","create","baseURL","fetchAllContacts","a","get","data","fetchAddContact","contact","post","fetchRemoveContact","id","delete","filterContact","createAction","getContactRequest","getContactSuccess","getContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","getContact","actionFunc","dispatch","api","addContact","newContact","removeContact","ContactList","items","useSelector","state","filter","filterContacts","e","name","toLowerCase","includes","useDispatch","map","number","onClick","FilterContacts","type","placeholder","onChange","target","value","fields","pattern","title","required","InputForm","useState","setState","useEffect","handleChange","onSubmit","preventDefault","newName","alert","singleContact","generate","ContactForm","reducer","createReducer","action","payload","store","configureStore","getState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dc4df94.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:3001/contacts/',\n});\n\nexport const fetchAllContacts = async () => {\n  const { data } = await instance.get('/');\n  return data;\n};\n\nexport const fetchAddContact = async contact => {\n  const { data } = await instance.post('/', contact);\n  return data;\n};\n\nexport const fetchRemoveContact = async id => {\n  const { data } = await instance.delete(`/${id}`);\n  return data;\n};\n\nexport default {\n  fetchAllContacts,\n  fetchAddContact,\n  fetchRemoveContact,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContact = createAction('contacts/filter');\n\nexport const getContactRequest = createAction('contacts/getRequest');\nexport const getContactSuccess = createAction('contacts/getSuccess');\nexport const getContactError = createAction('contacts/getError');\n\nexport const addContactRequest = createAction('contacts/addRequest');\nexport const addContactSuccess = createAction('contacts/addSuccess');\nexport const addContactError = createAction('contacts/addError');\n\nexport const removeContactRequest = createAction('contacts/removeRequest');\nexport const removeContactSuccess = createAction('contacts/removeSuccess');\nexport const removeContactError = createAction('contacts/removeError');\n","import api from '../shared/services/contacts';\nimport {\n  getContactSuccess,\n  getContactError,\n  getContactRequest,\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  removeContactError,\n  removeContactRequest,\n  removeContactSuccess,\n} from './actions';\n\nexport const getContact = () => {\n  const actionFunc = async dispatch => {\n    dispatch(getContactRequest());\n\n    try {\n      const data = await api.fetchAllContacts();\n      dispatch(getContactSuccess(data));\n    } catch (error) {\n      dispatch(getContactError(error));\n    }\n  };\n\n  return actionFunc;\n};\n\nexport const addContact = data => {\n  const actionFunc = async dispatch => {\n    dispatch(addContactRequest());\n    try {\n      const newContact = await api.fetchAddContact(data);\n      dispatch(addContactSuccess(newContact));\n    } catch (error) {\n      dispatch(addContactError(error));\n    }\n  };\n\n  return actionFunc;\n};\n\nexport const removeContact = id => {\n  const actionFunc = async dispatch => {\n    dispatch(removeContactRequest());\n    try {\n      const contactId = await api.fetchRemoveContact(id);\n\n      dispatch(removeContactSuccess(id));\n    } catch (error) {\n      dispatch(removeContactError(error));\n    }\n  };\n\n  return actionFunc;\n};\n\nexport default {\n  getContact,\n  addContact,\n  removeContact,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from '../../../redux/operations';\n\nexport const ContactList = () => {\n  const items = useSelector(state => state.items);\n  const filter = useSelector(state => state.filter);\n\n  const filterContacts = e => {\n    return items.filter(e => e.name.toLowerCase().includes(filter));\n  };\n  const dispatch = useDispatch();\n  return (\n    <>\n      {filterContacts && (\n        <>\n          <h3>Contacts</h3>\n          <ul>\n            {filterContacts().map(e => (\n              <li key={e.id}>\n                {e.name} : {e.number}\n                <button onClick={() => dispatch(removeContact(e.id))}>\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../../redux/actions';\n\nexport const FilterContacts = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <h2>Find contacts by name</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"start typing\"\n        onChange={({ target }) => dispatch(filterContact(target.value))}\n      />\n    </>\n  );\n};\n\nFilterContacts.propTypes = {\n  filtered: PropTypes.func.isRequired,\n};\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n    required: true,\n  },\n  number: {\n    type: 'tel',\n    name: 'number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\n    required: true,\n  },\n};\nexport default fields;\n","import { useEffect, useState } from 'react';\nimport { v4 as generate } from 'uuid';\nimport { useSelector } from 'react-redux';\nimport { addContact, getContact } from '../../../redux/operations';\nimport fields from './fields';\nimport { useDispatch } from 'react-redux';\n\nconst InputForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.items);\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n  useEffect(() => {\n    dispatch(getContact());\n  }, []);\n  const handleChange = ({ target }) => {\n    setState({ ...state, [target.name]: target.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = state;\n\n    const newName = items.map(e => e.name);\n    if (newName.includes(e.target.name.value)) {\n      return alert(`${e.target.name.value} says hello from chat`);\n    }\n    const singleContact = {\n      id: generate(),\n      name,\n      number,\n    };\n    dispatch(addContact(singleContact));\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Phonebook</h1>\n        <h2>Name</h2>\n        <input {...fields.name} onChange={handleChange} />\n        <h2>Number</h2>\n        <input {...fields.number} onChange={handleChange} />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default InputForm;\n","import { ContactList } from './ContactList/ContactList';\nimport { FilterContacts } from './FilterContacts/FilterContacts';\nimport InputForm from './inputForm/InputForm';\n\nconst ContactForm = () => {\n  return (\n    <>\n      <InputForm />\n      <FilterContacts />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { configureStore, createReducer } from '@reduxjs/toolkit';\nimport {\n  getContactSuccess,\n  addContactSuccess,\n  removeContactSuccess,\n  filterContact,\n} from './actions';\n\nconst initialStore = {\n  filter: '',\n  items: [],\n};\n\nconst reducer = createReducer(initialStore, {\n  [getContactSuccess]: (state, action) => {\n    return { filter: '', items: action.payload };\n  },\n  [addContactSuccess]: (state, action) => {\n    return { filter: state.filter, items: [...state.items, action.payload] };\n  },\n  [removeContactSuccess]: (state, action) => {\n    return {\n      filter: state.filter,\n      items: state.items.filter(e => e.id !== action.payload),\n    };\n  },\n  [filterContact]: (state, action) => {\n    return { filter: action.payload, items: [...state.items] };\n  },\n});\n\nconst store = configureStore({\n  reducer: reducer,\n});\n\nexport default store;\n","import React from 'react';\nimport InputForm from './components/InputForm/contactForm';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nstore.getState();\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <InputForm />\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}